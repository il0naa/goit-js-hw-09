{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,QAAOO,OAAQ,aAEnCJ,EAAO,CAAEJ,WAAUC,QAAOO,OAAQ,Y,GAEnCP,E,IAIPQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBAaN,IAXA,IAAMC,EAAOL,SAASC,cAAc,SAC9BK,EAAaD,EAAKJ,cAAc,kBAChCM,EAAYF,EAAKJ,cAAc,iBAC/BO,EAAcH,EAAKJ,cAAc,mBAEjCQ,EAAeC,SAASJ,EAAWK,OACnCC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAE9BG,EAAW,GAERC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAChC,IAAMvB,EAAQiB,GAAgBM,EAAI,GAAKH,EACvCE,EAASE,KAAK1B,EAAcyB,EAAGvB,G,CAGjCC,QAAQwB,WAAWH,GAChBI,MAAK,SAAAC,GACJA,EAAQC,SAAQ,SAAAC,GACQ,cAAlBA,EAAOtB,OACTuB,QAAQC,IAAI,uBAAqDC,OAA5BH,EAAOV,MAAMpB,SAAS,QAAyBiC,OAAnBH,EAAOV,MAAMnB,MAAM,OAElF8B,QAAMC,IAAI,sBAAmDC,OAA7BH,EAAOI,OAAOlC,SAAS,QAA0BiC,OAApBH,EAAOI,OAAOjC,MAAM,M,OAIxFkC,OAAM,SAAAC,GACLL,QAAQK,MAAM,SAAUA,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay, status: 'resolved' });\n      } else {\n        reject({ position, delay, status: 'rejected' });\n      }\n    }, delay);\n  });\n};\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const form = document.querySelector('.form');\n  const delayInput = form.querySelector('[name=\"delay\"]');\n  const stepInput = form.querySelector('[name=\"step\"]');\n  const amountInput = form.querySelector('[name=\"amount\"]');\n\n  const initialDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  const promises = [];\n\n  for (let i = 1; i <= amount; i++) {\n    const delay = initialDelay + (i - 1) * step;\n    promises.push(createPromise(i, delay));\n  }\n\n  Promise.allSettled(promises)\n    .then(results => {\n      results.forEach(result => {\n        if (result.status === 'fulfilled') {\n          console.log(`✅ Fulfilled promise ${result.value.position} in ${result.value.delay}ms`);\n        } else {\n          console.log(`❌ Rejected promise ${result.reason.position} in ${result.reason.delay}ms`);\n        }\n      });\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n});\n\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","status","document","querySelector","addEventListener","event","preventDefault","form","delayInput","stepInput","amountInput","initialDelay","parseInt","value","step","amount","promises","i","push","allSettled","then","results","forEach","result","console","log","concat","reason","catch","error"],"version":3,"file":"03-promises.b1dcd9fb.js.map"}